apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  alert.rules: |-
    ALERT InstanceDown  IF up == 0 FOR 5m
    ALERT EtcdNoLeader  IF etcd_server_has_leader == 0 FOR 1m
    ALERT DockerTimeout IF irate(kubelet_docker_operations_timeout[5m]) > 0 FOR 1m
    ALERT DockerErrors  IF irate(kubelet_docker_operations_errors[5m])  > 0 FOR 1m
    ALERT APILatency    IF apiserver_request_latencies_summary{quantile="0.9",verb=~"POST|GET|DELETE"} / 1000000 > 5 FOR 1m
    ALERT PodRestarts   IF rate(kube_pod_container_status_restarts[5m]) > 0 FOR 5m
    ALERT ProbeFailed   IF probe_success == 0 FOR 1m
    ALERT ProbeCertExp  IF probe_ssl_earliest_cert_expiry - time() < 86400 * 7 FOR 1m
    ALERT ProbeSlowTLS  IF probe_duration_seconds{instance=~"https:.*"} > 5 FOR 5m
    ALERT ProbeSlow     IF probe_duration_seconds{instance=~"http:.*"}  > 1 FOR 1m

  alertmanager.yml.in: |-
    global:
      # The smarthost and SMTP sender used for mail notifications.
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'infra@5pi.de'

    route:
      receiver: 'default'
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 10s
      repeat_interval: 6h

    receivers:
    - name: 'default'
      email_configs:
      - to: 'alerts@5pi.de'
        auth_username: 'infra@freigeist.org'
        auth_identity: 'infra@freigeist.org'
        auth_password: '<SMTP_PASSWORD>'

  prometheus.yml: |-
    rule_files:
    - /etc/prometheus/alert.rules
    scrape_configs:
    - job_name: 'blackbox'
      metrics_path: /probe
      params:
        module: [http_2xx]
      static_configs:
      - targets:
        - https://textkrieg.de
        - https://5pi.de
      relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: blackbox-exporter

    - job_name: 'node'
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - source_labels: [__address__]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+)
        replacement: $1:9100

    - job_name: 'etcd'
      tls_config:
        ca_file: /etc/host-ssl/5pi-ca.pem
        cert_file: /etc/host-ssl/server.pem
        key_file: /etc/host-ssl/server-key.pem
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - target_label: __scheme__
        action: replace
        replacement: https
      - source_labels: [__address__]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+)
        replacement: $1:2379

    - job_name: 'kubernetes-apiservers'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: endpoints
      # the default/kubernetes service.
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    - job_name: 'kubernetes-nodes'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node

      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

    # Scrape config for service endpoints.
    #
    # The relabeling allows the actual service scrape endpoint to be configured
    # via the following annotations:
    #
    # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
    # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
    # to set this to `https` & most likely set the `tls_config` of the scrape config.
    # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # * `prometheus.io/port`: If the metrics are exposed on a different port to the
    # service then set this appropriately.
    - job_name: 'kubernetes-service-endpoints'

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: (.+)(?::\d+);(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name


    ### HOME ####
    #############
    - job_name: 'node-home'
      metrics_path: /node_exporter/metrics
      basic_auth:
        username: user
        password: TabyikDeag8
      static_configs:
      - targets:
        - home.5pi.de

    - job_name: 'pushgateway-home'
      metrics_path: /pushgateway/metrics
      basic_auth:
        username: user
        password: TabyikDeag8
      static_configs:
      - targets:
        - home.5pi.de

    - job_name: 'blackbox-home'
      metrics_path: /blackbox_exporter/probe
      basic_auth:
        username: user
        password: TabyikDeag8
      params:
        module: [http_2xx_tcp4]
      static_configs:
      - targets:
        - https://textkrieg.de
        - https://5pi.de
      relabel_configs:
      - source_labels: [__address__]
        regex: (.*)
        target_label: __param_target
        replacement: ${1}
      - source_labels: [__param_target]
        regex: (.*)
        target_label: instance
        replacement: ${1}
      - source_labels: []
        regex: .*
        target_label: __address__
        replacement: home.5pi.de

    - job_name: 'snmp'
      metrics_path: /snmp_exporter/snmp
      basic_auth:
        username: user
        password: TabyikDeag8
      params:
        module: [default]
      static_configs:
      - targets:
        - 192.168.1.1
      relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: home.5pi.de
